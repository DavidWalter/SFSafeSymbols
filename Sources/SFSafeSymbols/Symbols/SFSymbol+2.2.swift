// Don't touch this manually, this code is generated by the SymbolsGenerator helper tool

// 2.2 Symbols
@available(iOS 14.5, macOS 11.3, tvOS 14.5, watchOS 7.4, *)
public extension SFSymbol {
    /// 􀺹
    /// ⚠️ This symbol may not be modified and may only be used to refer to Apple’s AirPods Max.
    static let airpodsmax = SFSymbol(rawValue: "airpodsmax")

    /// 􀸎
    /// ⚠️ This symbol may not be modified and may only be used to refer to Apple Watch.
    static let applewatchSideRight = SFSymbol(rawValue: "applewatch.side.right")

    /// 􀌰
    /// From iOS 14.0, macOS 11.0, tvOS 14.0 and watchOS 7.0 on, the following localizations are available: Arabic, Hebrew
    /// From iOS 15.0, macOS 12.0, tvOS 15.0 and watchOS 8.0 on, the following localizations are available: Chinese, Hindi, Japanese, Korean, Thai, Traditional Chinese
    static let characterBubble = SFSymbol(rawValue: "character.bubble")

    /// 􀌱
    /// From iOS 14.0, macOS 11.0, tvOS 14.0 and watchOS 7.0 on, the following localizations are available: Arabic, Hebrew
    /// From iOS 15.0, macOS 12.0, tvOS 15.0 and watchOS 8.0 on, the following localizations are available: Chinese, Hindi, Japanese, Korean, Thai, Traditional Chinese
    static let characterBubbleFill = SFSymbol(rawValue: "character.bubble.fill")

    /// 􀅫
    /// From iOS 14.0, macOS 11.0, tvOS 14.0 and watchOS 7.0 on, the following localizations are available: Arabic, Chinese, Hebrew, Hindi, Japanese, Korean, Thai
    /// From iOS 14.2, macOS 11.0, tvOS 14.2 and watchOS 7.1 on, the following localizations are available: Traditional Chinese
    static let characterCursorIbeam = SFSymbol(rawValue: "character.cursor.ibeam")

    /// 􀅶
    /// From iOS 14.0, macOS 11.0, tvOS 14.0 and watchOS 7.0 on, the following localizations are available: Arabic, Chinese, Hebrew, Hindi, Japanese, Korean, Thai
    /// From iOS 14.2, macOS 11.0, tvOS 14.2 and watchOS 7.1 on, the following localizations are available: Traditional Chinese
    static let characterTextbox = SFSymbol(rawValue: "character.textbox")

    /// 􀷭
    /// ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod mini.
    static let hifispeakerAndHomepodmini = SFSymbol(rawValue: "hifispeaker.and.homepodmini")

    /// 􀷮
    /// ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod mini.
    static let hifispeakerAndHomepodminiFill = SFSymbol(rawValue: "hifispeaker.and.homepodmini.fill")

    /// 􀷫
    /// ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod and HomePod mini.
    static let homepodAndHomepodmini = SFSymbol(rawValue: "homepod.and.homepodmini")

    /// 􀷬
    /// ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod and HomePod mini.
    static let homepodAndHomepodminiFill = SFSymbol(rawValue: "homepod.and.homepodmini.fill")

    /// 􀷧
    /// ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod mini.
    static let homepodmini = SFSymbol(rawValue: "homepodmini")

    /// 􀷩
    /// ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod mini.
    static let homepodmini2 = SFSymbol(rawValue: "homepodmini.2")

    /// 􀷪
    /// ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod mini.
    static let homepodmini2Fill = SFSymbol(rawValue: "homepodmini.2.fill")

    /// 􀷨
    /// ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod mini.
    static let homepodminiFill = SFSymbol(rawValue: "homepodmini.fill")

    /// 􀴊
    @available(iOS, introduced: 14.5, deprecated: 15.0, renamed: "rectangleTopthirdInsetFilled")
    @available(macOS, introduced: 11.3, deprecated: 12.0, renamed: "rectangleTopthirdInsetFilled")
    @available(tvOS, introduced: 14.5, deprecated: 15.0, renamed: "rectangleTopthirdInsetFilled")
    @available(watchOS, introduced: 7.4, deprecated: 8.0, renamed: "rectangleTopthirdInsetFilled")
    static let rectangleTopthirdInsetFill = SFSymbol(rawValue: "rectangle.topthird.inset.fill")
}
